SELECT STORE_NAME FROM STORE_INFORMATION;

SELECT STORE_ID FROM STORE_INFORMATION;

SELECT STORE_ID,STORE_NAME,SALES FROM STORE_INFORMATION;

-- ＊代表全部
SELECT * FROM STORE_INFORMATION;

-- 資料去重複（ SELECT DISTINCT）
SELECT DISTINCT STORE_NAME FROM STORE_INFORMATION;

-- 資料沒有去重複因為是以整列作辨識
SELECT DISTINCT STORE_ID,STORE_NAME FROM STORE_INFORMATION;

-- AND 且 條件下越多，資料越少（嚴謹）
SELECT * 
FROM STORE_INFORMATION 
WHERE SALES > 300 AND GEOGRAPHY_ID = 2;

-- OR 或 條件下越多，資料越多（寬鬆）
SELECT * 
FROM STORE_INFORMATION 
WHERE SALES > 300 OR GEOGRAPHY_ID = 2;

-- 我們若要在 Store_Information 表格中選出所有 Sales 高於 $1,000 或是 Sales 在 $500 及 $275 之間的資料的話
SELECT * 
FROM STORE_INFORMATION 
WHERE SALES > 1000 OR (SALES > 275 AND SALES <500);

-- 麻煩的範例
SELECT *
FROM STORE_INFORMATION
WHERE STORE_ID=1
OR STORE_ID=2
OR STORE_ID=3;

-- 簡化版
SELECT *
FROM STORE_INFORMATION
WHERE STORE_ID IN(1,2,3,4);

-- 介於什麼數值根什麼數值之間 麻煩版
SELECT * FROM STORE_INFORMATION
WHERE SALES>= 300 AND SALES <=2500;

-- 介於什麼值到什麼值之間 聰明版 BETWEEN AND
SELECT * FROM STORE_INFORMATION
WHERE SALES BETWEEN 300 AND 2500;

-- BETWEEN AND 日期也適用，最少一定要到日的部分
SELECT * FROM STORE_INFORMATION
WHERE STORE_DATE BETWEEN '2018-02-01' AND '2018-05-31';

-- BETWEEN AND 日期只想要用月份查詢，用SQL函數
SELECT STORE_ID,STORE_NAME,STORE_DATE, YEAR(STORE_DATE), MONTH(STORE_DATE)
FROM STORE_INFORMATION
WHERE  YEAR(STORE_DATE)=2018
AND MONTH(STORE_DATE) BETWEEN 2 AND 5;

-- MySQL日期轉換函數：
-- 字串轉日期 告訴他這是年跟月
SELECT str_to_date('2018-02','%y-%m' );

SELECT * FROM STORE_INFORMATION
WHERE STORE_DATE 
BETWEEN str_to_date('2018-02','%Y-%m') AND str_to_date('2018-05','%Y-%m');

-- 忽略後面，要B開頭字
SELECT * FROM STORE_INFORMATION
WHERE STORE_NAME LIKE 'B%';

-- 忽略前面，要S結尾字
SELECT * FROM STORE_INFORMATION
WHERE STORE_NAME LIKE '%S';

-- 忽略前後，要中間有OS字
SELECT * FROM STORE_INFORMATION
WHERE STORE_NAME LIKE '%OS%';

-- L開頭Ｓ結尾，中間不管
SELECT * FROM STORE_INFORMATION
WHERE STORE_NAME LIKE 'L%S';

-- 中間有空格的
SELECT * FROM STORE_INFORMATION
WHERE STORE_NAME LIKE '% %';

-- 1.「且」找出屬於西區的商店
-- 2.「且」營業額大於300(包含300)
-- 3.「且」商店名稱“L”開頭
-- 4.「或」營業日介於2018年3月至4月

SELECT * FROM STORE_INFORMATION 
WHERE GEOGRAPHY_ID=2
AND SALES>=300
AND STORE_NAME LIKE 'L%'
OR STORE_DATE BETWEEN '2018-03-01' AND '2018-04-30';

-- Order的先後順序會影響
SELECT * FROM STORE_INFORMATION 
ORDER BY SALES DESC, STORE_DATE DESC;

-- 聚合函數
SELECT SUM(SALES),AVG(SALES),COUNT(SALES), 
MIN(SALES),MAX(SALES)
FROM STORE_INFORMATION;

-- 查詢資料是NULL(空值)的個數，所以要用COUNT
SELECT COUNT(STORE_ID) 
FROM STORE_INFORMATION
WHERE GEOGRAPHY_ID IS NULL;

-- 查詢不是NULL(空值)的資料個數，所以要用COUNT
SELECT COUNT(STORE_ID) 
FROM STORE_INFORMATION
WHERE GEOGRAPHY_ID IS NOT NULL;

-- DISTINCT+COUNT=資料去重複地算有幾個個數
SELECT COUNT(DISTINCT STORE_NAME)
FROM STORE_INFORMATION;

-- 個別商店營業額的加總，所以要資料分群才能做到
-- 非群組的欄位必須要指定「聚合函數」
-- GROUP BY() 欄位分群＋其他非群組的欄位使用函數合併
SELECT STORE_NAME, SUM(SALES),COUNT(SALES), AVG(SALES), 
MIN(SALES),MAX(SALES)
FROM STORE_INFORMATION
GROUP BY STORE_NAME;

-- 群組資料清單函數（查詢未群組話前的資料List）每家資料庫的這個語法不一樣
SELECT STORE_NAME,SUM(SALES), COUNT(STORE_ID), 
	GROUP_CONCAT(SALES ORDER BY SALES DESC)
FROM STORE_INFORMATION
GROUP BY STORE_NAME;

-- 群組資料清單函數（查詢未群組話前的資料List）每家資料庫的這個語法不一樣 分隔符號變成斜線
SELECT STORE_NAME,SUM(SALES), COUNT(STORE_ID), 
	GROUP_CONCAT(SALES ORDER BY SALES DESC SEPARATOR '/')
FROM STORE_INFORMATION
GROUP BY STORE_NAME;

-- 各別商店的加總營業額大於某個特定數值有幾筆？
-- 針對群組後的（資料分群）函數欄位，做條件篩選
-- WHERE 只能查原本資料表中的欄位，所以不能寫 WHERE SUM(SALES)，且要放在 GROUP BY 之前
SELECT STORE_NAME,SUM(SALES)
FROM STORE_INFORMATION
WHERE SALES>=3000
GROUP BY STORE_NAME;

-- 因為WHERE的限制，所以要用HAVING用在聚合函數
SELECT STORE_NAME,SUM(SALES)
FROM STORE_INFORMATION
GROUP BY STORE_NAME
HAVING SUM(SALES)>=3000
ORDER BY SUM(SALES) ASC;

-- 計算和統計「個別商店」的以下三項資料：
-- 「總和營業額」、「商店資料個數」、「平均營業額」
-- 搜尋或排除條件如下：
-- 排除「平均營業額」1000(含)以下的商店資料
-- 排除「商店資料個數」1(含)個以下的商店資料
-- 依照「平均營業額」由大至小排序
-- PS: 使用別名語法簡化「表格名稱」及查詢結果「欄位名稱」

SELECT STORE_NAME, SUM(SALES), COUNT(STORE_ID), AVG(SALES)
FROM STORE_INFORMATION
GROUP BY STORE_NAME
HAVING AVG(SALES) > 1000 AND COUNT(STORE_ID) > 1
ORDER BY AVG(SALES) DESC;





